{"version":3,"file":"plugin-import.js","sources":["../src/plugins/plugin-import/plugin-import.js"],"sourcesContent":["import path from \"path\";\nimport { readFile } from \"fs/promises\";\nimport { request } from \"@uppercod/request\";\nimport createCache from \"@uppercod/cache\";\nimport { walkAtRule, replaceWith } from \"../../utils/utils\";\n\nconst cache = createCache();\nconst isUrl = (file) => /^(http(s){0,1}:){0,1}\\/\\//.test(file);\n\n/**\n *\n * @param {Object} [options]\n * @param {(src:string)=>Promise<string>} [options.readFile]\n * @returns {import(\"../../load\").plugin}\n */\n\nexport function pluginImport(options) {\n    options = {\n        readFile: (src) => readFile(src, \"utf-8\"),\n        ...options,\n    };\n    /**@type {import(\"../load\").plugin} */\n    return async (root, { load }) => {\n        const context = {};\n        const { dir } = path.parse(root.file);\n        await walkAtRule(root.css, \"@import\", async (rule) => {\n            const test = rule.value.match(\n                /@import\\s+(?:\"([^\"]+)\"|'([^']+)')([^;]*);/\n            );\n            if (test) {\n                const [, src1, src2, media = \"\"] = test;\n                let code;\n                let src = src1 || src2;\n                if (isUrl(src)) {\n                    [src, code] = await cache(request, src);\n                } else {\n                    [src, code] = await localResolve(\n                        options.readFile,\n                        dir,\n                        src\n                    );\n                }\n\n                const css = await load({\n                    file: src,\n                    code,\n                });\n\n                replaceWith(rule, css);\n            }\n        });\n    };\n}\n/**\n *\n * @param {(src:string)=>Promise<string>} readFile\n * @param {string} dir\n * @param {string} src\n */\nasync function localResolve(readFile, dir, src) {\n    try {\n        src = path.join(dir, src);\n        return [src, await readFile(src)];\n    } catch (e) {\n        const test = src.match(/(?:(@\\w+\\/[^\\/]+)|([^\\/]+))(.*)/);\n\n        if (test) {\n            const [, name1, name2, folder] = test;\n\n            let md;\n            try {\n                md = require.resolve(src);\n            } catch (e) {\n                md = require.resolve(name1 || name2);\n            }\n\n            const { dir, ext, base } = path.parse(md);\n\n            const nextSrc = path.join(\n                dir,\n                ext == \".css\" ? base : folder.endsWith(\".css\") ? folder : base\n            );\n\n            return [nextSrc, await readFile(nextSrc)];\n        }\n    }\n}\n"],"names":["createCache","readFile","path","walkAtRule","request","replaceWith"],"mappings":"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"}